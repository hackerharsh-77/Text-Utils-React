{"version":3,"sources":["components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","aboutText","onClick","toggleMode","role","htmlFor","TextForm","useState","text","setText","style","color","heading","value","backgroundColor","onChange","event","target","rows","newText","toUpperCase","toLowerCase","split","length","App","setmode","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.82fe2734.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"/\">{props.aboutText}</a>\r\n          </li>\r\n        </ul>\r\n        <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n          <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n          </div>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    //aboutText: PropTypes.string.isRequired\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        let newText= text.toUpperCase();\r\n        setText(newText)\r\n    }\r\n    const handleLoClick = ()=>{\r\n        let newText= text.toLowerCase();\r\n        setText(newText)\r\n    }\r\n    const handleClick = ()=>{\r\n        let newText= \" \";\r\n        setText(newText)\r\n    }\r\n    const handleOnChange = (event)=>{\r\n        setText(event.target.value)\r\n    }\r\n    const [text, setText] = useState(\"\");\r\n    return (\r\n     <>\r\n        <div className=\"container\"  style={{color:props.mode==='dark'?'white':'#070749'}}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" value={text} style={{backgroundColor:props.mode==='dark'?'grey':'white', color:props.mode==='dark'?'white':'#070749'}} id=\"myBox\" onChange={handleOnChange} rows=\"8\"></textarea>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Convert to LowerCase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleClick}>Clear text</button>\r\n            </div>\r\n        </div>\r\n        <div className=\"container my-2\" style={{color:props.mode==='dark'?'white':'#070749'}}>\r\n            <h1>your text summary</h1>\r\n            <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n            <p>{0.008 * text.split(\" \").length} Minutes read </p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter your text above to preview it here\"}</p>\r\n        </div>\r\n     </>\r\n    )\r\n}\r\n","\n//import { unstable_renderSubtreeIntoContainer } from 'react-dom';\nimport './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\n\n \n\nfunction App() {\n  const [mode, setmode] = useState('light'); //whether dark mode is enabled or not\n  const toggleMode = () =>{\n    if(mode==='light')\n    {\n      setmode('dark');\n      document.body.style.backgroundColor = '#020a39';\n    }\n    else{\n      setmode('light');\n      document.body.style.backgroundColor = 'white';\n    }\n\n  }\n  return (\n    <>\n    {/* <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\"/> */}\n    <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n    <div className=\"container my-3\">\n    <TextForm heading=\"Enter text here to analyze below \" mode={mode}/>\n    {/* <About/> */}\n    </div>\n  </>\n  );\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}